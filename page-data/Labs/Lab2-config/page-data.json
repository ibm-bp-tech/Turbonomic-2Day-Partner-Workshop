{
    "componentChunkName": "component---src-pages-labs-lab-2-config-mdx",
    "path": "/Labs/Lab2-config/",
    "result": {"pageContext":{"frontmatter":{"title":"Lab2"},"relativePagePath":"/Labs/Lab2-config.mdx","titleType":"page","MdxNode":{"id":"1cdc2330-ac9d-592b-b225-626de96c97ec","children":[],"parent":"34553bd1-4b67-5919-8fc4-29760b93eaa0","internal":{"content":"---\ntitle: Lab2\n---\nexport const Title = () => (\n  <span>\n    Add Kubernetes Target <br />\n  </span>\n)\n;\n\n<InlineNotification>\n\n**Copy/Paste Tip**\n\n*Macs: * Command + C/V will not work across the desktop to bastion. If something is copied in Mac desktop, paste in bastion using ctrl+shift+V.\n\n*Windows: * Ctrl + V may not work for pasting items copied in destop into bastion. If something is copied in desktop, try pasting with ctrl+shift+V.\n\n</InlineNotification>\n\n<InlineNotification kind= \"warning\">\n\nBe wary of code blocks below that are mentioned as results/output. These blocks are references, and should not be copied and pasted into the bastion terminal.\n\n</InlineNotification>\n\n## Adding Kubernetes Target\n\nThe Turbonomic platform gathers information from Kubernetes/OpenShift environment through **Kubeturbo** that is deployed into the Kubernetes/OpenShift cluster that you want to manage. Kubeturbo will run a single pod deployment with the following resources:\n\n- Namespace or Project (default: turbo)\n- Service Account\n- Rolebinding defined\n- ConfigMap which contains the connection to the Turbonomic server\n- Deployment for Kubeturbo pod.\n\n\nMore information is available on the [Kubeturbo Wiki](https://github.com/turbonomic/kubeturbo/wiki). In this tutorial, you will be installing Kubeturbo via helm chart.\n\n### Kubeturbo deployment via Helm charts\n\nAs per the requirements, for the KubeTurbo to communicate with the Turbonomic server, you need\n* Turbonomic URL: https://10.0.0.1\n* ServiceAccount: kubeserviceaccount (you will create this as described below)\n\n### Create Service Account\n\nThe various steps to create a service account are:\n\n- From your Turbonomic UI navigate to Settings -> User Management \n\n  ![user_mgmt](img/addtargets/usermgmt.png)\n\n- Select **NEW LOCAL USER**  \n  ![lu](img/addtargets/newlu1.png)\n\n- For the user details, please fill as\n  - **USERNAME**: kubeserviceaccount\n  - **PASSWORD**: CoC#Rulz! (as referenced in the \"Turbo-PoT-Credentials\")\n  - **ROLE**: Site Administrator (default)\n  - and then click **SAVE**  \n  ![newuser](img/addtargets/userdetails.png)\n\n- Validate the user is created  \n  ![usercr](img/addtargets/usercreated.png)\n\n### Install Kubeturbo on the Kubernetes cluster\n\n<InlineNotification>\n\nFor Copy/Paste, debugging, and command-line help, refer to the tips at the bottom of this page.\n\n</InlineNotification>\n\nThe Kubeturbo is installed on the provided Kubernetes cluster. In this section, you will SSH into your Kubernetes cluster from your bastion VM. **So all commands will be executed from your bastion VM's Terminal window.**\n\n- Find the Turbonomic Server Version from the console: The version here is **8.11.6**, as shown in the picture.  \n  \n  ![turbo_version](img/addtargets/turbosrv_version.png)\n\n- Open a Terminal window in your bastion VM. Navigate to \"Activities\" from the top left and click on Terminal.\n\n- SSH to server kmaster (IPAddress: 10.0.0.3) using **user-id: cocuser**, **password: Refer to \"Turbo-PoT-Credentials\" on you bastion VM** and **ssh port: 2022**\n\n  \n  ```\n  ssh -p 2022 cocuser@10.0.0.3\n  ```\n\n  To list all the helm releases in the cluster, execute the command below.\n  ```\n  helm ls -A \n  ```\n\n  For example: to view the release for the Instana agent only, run this command\n  ```\n  helm ls -n instana-agent\n  ```\n\n  The result will be something like this:\n   ```javascript\n   NAME           NAMESPACE    \tREVISION\tUPDATED                                \tSTATUS  \tCHART               \tAPP VERSION\n   instana-agent instana-agent\t1       \t2023-03-20 23:33:01.070041691 -0400 EDT\tdeployed\tinstana-agent-1.2.56\t1.244.0\n    ```\n [Kubeturbo git](https://github.com/turbonomic/kubeturbo.git) is cloned locally. Then follow the steps:\n\n  ```\n  cd kubeturbo/deploy\n  kubectl create ns turbo\n  ```\n\n  The result should be like this:\n  ```\n  namespace/turbo created\n  cocuser@kmaster:~/kubeturbo/deploy$ \n  ```\n\n  Next run the following install command to install kubeturbo (ensure the version and tag is same as deployed Turbo version:\n  ```\n  helm install  kubeturbo  ./kubeturbo --namespace turbo \\\n       --set serverMeta.turboServer=https://10.0.0.1 \\\n       --set serverMeta.version=8.11.6 --set image.tag=8.11.6 \\\n       --set restAPIConfig.opsManagerUserName=kubeserviceaccount \\\n       --set restAPIConfig.opsManagerPassword='CoC#Rulz!' \\\n       --set targetConfig.targetName=kubecluster1\n  ```\n\n  Will give output as:\n\n  ```\n  NAME: kubeturbo\n  LAST DEPLOYED: Thu Mar 30 20:34:33 2023\n  NAMESPACE: turbo\n  STATUS: deployed\n  REVISION: 1\n  TEST SUITE: None\n  ```\n\n- Now validate that the kubeturbo that is installed is showing up in the Turbonomic console. \n  - Go to Settings -> Target Configuration.\n    \n    ![settings](img/addtargets/kubeturbo_target.png)\n\n  - Click on **Cloud Native**\n  - You will see the added kubernetes target with the name **Kubernetes-kubecluster1** (kubecluster1 is the name you specified during helm chart install).\n  \n    ![settings1](img/addtargets/kubeturbo_target1.png)\n\n- Now you can search for this cluster.\n  ![search](img/addtargets/search_cluster.png)\n\n\n\n<InlineNotification>\n\n**Tip**: \nThe following commands may be handy, in case you run into issues and need to troubleshoot.  Do not use the below helm commands unless your helm install failed.\n\n</InlineNotification>\n\n## Copy/Pasting issue for multi-line helm command\n As a workaround do the following:\n - ** Copy the bellow multi-line command **\n - ** Open a Text Editor in the Bastion Server by dothing the following: **\n - . Select Activities\n - . Select Show Application (the 3x3 icon)\n - . Select Text Editor\n - ** Paste the \"multi-line command\" **\n - ** Copy it again and then paste into the Terminal Session **\n\n## To remove helm release\n\n```\nhelm delete kubeturbo -n turbo \n```\n## To upgrade an existing release\n```\nhelm upgrade  kubeturbo  ./kubeturbo --namespace turbo \\\n    --set serverMeta.turboServer=https://10.0.0.1 \\\n    --set serverMeta.version=8.11.6 --set image.tag=8.11.6 \\\n    --set restAPIConfig.opsManagerUserName=kubeserviceaccount \\\n    --set restAPIConfig.opsManagerPassword=myPassw0rd \\\n    --set targetConfig.targetName=kubecluster1\n```\n## To set the context for a namespace\n\n```\nkubectl config set-context --current --namespace=turbo\n```\n\nCheck the logs to see if kubeturbo communicates with the Turbonomic Server.\n  \n  ```\n  kubectl -n turbo get pods \n  ```\n\n  The result will be like following:\n  ```\n  output\n  ------\n  NAME                         READY   STATUS    RESTARTS   AGE\n  kubeturbo-5fb9df466d-l7lk4   1/1     Running   0          5m47s\n  ```\n  To check the logs for this pod take your pod's name from the output of the previous command and run the command below using your pod name.\n  ```\n  kubectl -n turbo logs -f kubeturbo-5fb9df466d-l7lk4\n  ```\n\n  The result will be a loop that keeps printing the logs for that pod, similar to the snippet below:\n\n  ```\n  snippet of output\n  -----------------\n  I0331 14:35:10.398686       1 kubeturbo_builder.go:519] ********** Start running Kubeturbo Service **********\n  I0331 14:35:10.398736       1 mediation_container.go:67] Initializing mediation container .....\n  I0331 14:35:10.398740       1 mediation_container.go:74] Registering 1 probes\n  I0331 14:35:10.398769       1 client_websocket_transport.go:381] Trying websocket connection to: wss://10.0.0.1/vmturbo/remoteMediation\n  I0331 14:35:10.407740       1 client_websocket_transport.go:384] Successfully connected to api service at: wss://10.0.0.1/vmturbo/remoteMediation\n  I0331 14:35:10.407779       1 client_websocket_transport.go:305] Connected to server 10.0.0.1:443::192.168.1.219:40362\n  I0331 14:35:10.407785       1 client_websocket_transport.go:306] WebSocket transport layer is ready.\n  I0331 14:35:10.407799       1 remote_mediation_client.go:92] Start sdk client protocol ........\n  I0331 14:35:10.407814       1 sdk_client_protocol.go:35] Starting protocol negotiation ....\n  I0331 14:35:10.411017       1 sdk_client_protocol.go:118] Protocol negotiation result: ACCEPTED. Protocol version \"8.11.6\" is allowed to interact with server.\n  ```\n**Tip:** to break out of the logs loop you can do a ctrl+c.\n\n","type":"Mdx","contentDigest":"d17e4448a02d28e575e3f21d0432cb76","owner":"gatsby-plugin-mdx","counter":848},"frontmatter":{"title":"Lab2"},"exports":{},"rawBody":"---\ntitle: Lab2\n---\nexport const Title = () => (\n  <span>\n    Add Kubernetes Target <br />\n  </span>\n)\n;\n\n<InlineNotification>\n\n**Copy/Paste Tip**\n\n*Macs: * Command + C/V will not work across the desktop to bastion. If something is copied in Mac desktop, paste in bastion using ctrl+shift+V.\n\n*Windows: * Ctrl + V may not work for pasting items copied in destop into bastion. If something is copied in desktop, try pasting with ctrl+shift+V.\n\n</InlineNotification>\n\n<InlineNotification kind= \"warning\">\n\nBe wary of code blocks below that are mentioned as results/output. These blocks are references, and should not be copied and pasted into the bastion terminal.\n\n</InlineNotification>\n\n## Adding Kubernetes Target\n\nThe Turbonomic platform gathers information from Kubernetes/OpenShift environment through **Kubeturbo** that is deployed into the Kubernetes/OpenShift cluster that you want to manage. Kubeturbo will run a single pod deployment with the following resources:\n\n- Namespace or Project (default: turbo)\n- Service Account\n- Rolebinding defined\n- ConfigMap which contains the connection to the Turbonomic server\n- Deployment for Kubeturbo pod.\n\n\nMore information is available on the [Kubeturbo Wiki](https://github.com/turbonomic/kubeturbo/wiki). In this tutorial, you will be installing Kubeturbo via helm chart.\n\n### Kubeturbo deployment via Helm charts\n\nAs per the requirements, for the KubeTurbo to communicate with the Turbonomic server, you need\n* Turbonomic URL: https://10.0.0.1\n* ServiceAccount: kubeserviceaccount (you will create this as described below)\n\n### Create Service Account\n\nThe various steps to create a service account are:\n\n- From your Turbonomic UI navigate to Settings -> User Management \n\n  ![user_mgmt](img/addtargets/usermgmt.png)\n\n- Select **NEW LOCAL USER**  \n  ![lu](img/addtargets/newlu1.png)\n\n- For the user details, please fill as\n  - **USERNAME**: kubeserviceaccount\n  - **PASSWORD**: CoC#Rulz! (as referenced in the \"Turbo-PoT-Credentials\")\n  - **ROLE**: Site Administrator (default)\n  - and then click **SAVE**  \n  ![newuser](img/addtargets/userdetails.png)\n\n- Validate the user is created  \n  ![usercr](img/addtargets/usercreated.png)\n\n### Install Kubeturbo on the Kubernetes cluster\n\n<InlineNotification>\n\nFor Copy/Paste, debugging, and command-line help, refer to the tips at the bottom of this page.\n\n</InlineNotification>\n\nThe Kubeturbo is installed on the provided Kubernetes cluster. In this section, you will SSH into your Kubernetes cluster from your bastion VM. **So all commands will be executed from your bastion VM's Terminal window.**\n\n- Find the Turbonomic Server Version from the console: The version here is **8.11.6**, as shown in the picture.  \n  \n  ![turbo_version](img/addtargets/turbosrv_version.png)\n\n- Open a Terminal window in your bastion VM. Navigate to \"Activities\" from the top left and click on Terminal.\n\n- SSH to server kmaster (IPAddress: 10.0.0.3) using **user-id: cocuser**, **password: Refer to \"Turbo-PoT-Credentials\" on you bastion VM** and **ssh port: 2022**\n\n  \n  ```\n  ssh -p 2022 cocuser@10.0.0.3\n  ```\n\n  To list all the helm releases in the cluster, execute the command below.\n  ```\n  helm ls -A \n  ```\n\n  For example: to view the release for the Instana agent only, run this command\n  ```\n  helm ls -n instana-agent\n  ```\n\n  The result will be something like this:\n   ```javascript\n   NAME           NAMESPACE    \tREVISION\tUPDATED                                \tSTATUS  \tCHART               \tAPP VERSION\n   instana-agent instana-agent\t1       \t2023-03-20 23:33:01.070041691 -0400 EDT\tdeployed\tinstana-agent-1.2.56\t1.244.0\n    ```\n [Kubeturbo git](https://github.com/turbonomic/kubeturbo.git) is cloned locally. Then follow the steps:\n\n  ```\n  cd kubeturbo/deploy\n  kubectl create ns turbo\n  ```\n\n  The result should be like this:\n  ```\n  namespace/turbo created\n  cocuser@kmaster:~/kubeturbo/deploy$ \n  ```\n\n  Next run the following install command to install kubeturbo (ensure the version and tag is same as deployed Turbo version:\n  ```\n  helm install  kubeturbo  ./kubeturbo --namespace turbo \\\n       --set serverMeta.turboServer=https://10.0.0.1 \\\n       --set serverMeta.version=8.11.6 --set image.tag=8.11.6 \\\n       --set restAPIConfig.opsManagerUserName=kubeserviceaccount \\\n       --set restAPIConfig.opsManagerPassword='CoC#Rulz!' \\\n       --set targetConfig.targetName=kubecluster1\n  ```\n\n  Will give output as:\n\n  ```\n  NAME: kubeturbo\n  LAST DEPLOYED: Thu Mar 30 20:34:33 2023\n  NAMESPACE: turbo\n  STATUS: deployed\n  REVISION: 1\n  TEST SUITE: None\n  ```\n\n- Now validate that the kubeturbo that is installed is showing up in the Turbonomic console. \n  - Go to Settings -> Target Configuration.\n    \n    ![settings](img/addtargets/kubeturbo_target.png)\n\n  - Click on **Cloud Native**\n  - You will see the added kubernetes target with the name **Kubernetes-kubecluster1** (kubecluster1 is the name you specified during helm chart install).\n  \n    ![settings1](img/addtargets/kubeturbo_target1.png)\n\n- Now you can search for this cluster.\n  ![search](img/addtargets/search_cluster.png)\n\n\n\n<InlineNotification>\n\n**Tip**: \nThe following commands may be handy, in case you run into issues and need to troubleshoot.  Do not use the below helm commands unless your helm install failed.\n\n</InlineNotification>\n\n## Copy/Pasting issue for multi-line helm command\n As a workaround do the following:\n - ** Copy the bellow multi-line command **\n - ** Open a Text Editor in the Bastion Server by dothing the following: **\n - . Select Activities\n - . Select Show Application (the 3x3 icon)\n - . Select Text Editor\n - ** Paste the \"multi-line command\" **\n - ** Copy it again and then paste into the Terminal Session **\n\n## To remove helm release\n\n```\nhelm delete kubeturbo -n turbo \n```\n## To upgrade an existing release\n```\nhelm upgrade  kubeturbo  ./kubeturbo --namespace turbo \\\n    --set serverMeta.turboServer=https://10.0.0.1 \\\n    --set serverMeta.version=8.11.6 --set image.tag=8.11.6 \\\n    --set restAPIConfig.opsManagerUserName=kubeserviceaccount \\\n    --set restAPIConfig.opsManagerPassword=myPassw0rd \\\n    --set targetConfig.targetName=kubecluster1\n```\n## To set the context for a namespace\n\n```\nkubectl config set-context --current --namespace=turbo\n```\n\nCheck the logs to see if kubeturbo communicates with the Turbonomic Server.\n  \n  ```\n  kubectl -n turbo get pods \n  ```\n\n  The result will be like following:\n  ```\n  output\n  ------\n  NAME                         READY   STATUS    RESTARTS   AGE\n  kubeturbo-5fb9df466d-l7lk4   1/1     Running   0          5m47s\n  ```\n  To check the logs for this pod take your pod's name from the output of the previous command and run the command below using your pod name.\n  ```\n  kubectl -n turbo logs -f kubeturbo-5fb9df466d-l7lk4\n  ```\n\n  The result will be a loop that keeps printing the logs for that pod, similar to the snippet below:\n\n  ```\n  snippet of output\n  -----------------\n  I0331 14:35:10.398686       1 kubeturbo_builder.go:519] ********** Start running Kubeturbo Service **********\n  I0331 14:35:10.398736       1 mediation_container.go:67] Initializing mediation container .....\n  I0331 14:35:10.398740       1 mediation_container.go:74] Registering 1 probes\n  I0331 14:35:10.398769       1 client_websocket_transport.go:381] Trying websocket connection to: wss://10.0.0.1/vmturbo/remoteMediation\n  I0331 14:35:10.407740       1 client_websocket_transport.go:384] Successfully connected to api service at: wss://10.0.0.1/vmturbo/remoteMediation\n  I0331 14:35:10.407779       1 client_websocket_transport.go:305] Connected to server 10.0.0.1:443::192.168.1.219:40362\n  I0331 14:35:10.407785       1 client_websocket_transport.go:306] WebSocket transport layer is ready.\n  I0331 14:35:10.407799       1 remote_mediation_client.go:92] Start sdk client protocol ........\n  I0331 14:35:10.407814       1 sdk_client_protocol.go:35] Starting protocol negotiation ....\n  I0331 14:35:10.411017       1 sdk_client_protocol.go:118] Protocol negotiation result: ACCEPTED. Protocol version \"8.11.6\" is allowed to interact with server.\n  ```\n**Tip:** to break out of the logs loop you can do a ctrl+c.\n\n","fileAbsolutePath":"/Users/brandonwu/Documents/PTS/Gatsby/Turbonomic-2Day-Partner-Workshop/src/pages/Labs/Lab2-config.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}
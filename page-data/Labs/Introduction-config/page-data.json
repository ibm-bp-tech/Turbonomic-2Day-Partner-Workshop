{
    "componentChunkName": "component---src-pages-labs-introduction-config-mdx",
    "path": "/Labs/Introduction-config/",
    "result": {"pageContext":{"frontmatter":{"title":"Integration Lab - Introduction"},"relativePagePath":"/Labs/Introduction-config.mdx","titleType":"page","MdxNode":{"id":"2e387de7-5708-5b39-99eb-8a0ce0dba5d2","children":[],"parent":"88b5e8c9-859c-5cca-ab65-314e45fe36fa","internal":{"content":"---\ntitle: Integration Lab - Introduction\n---\nexport const Title = () => (\n  <span>\n    Integration Lab Introduction <br />\n  </span>\n)\n;\n\n# Add Targets\n\nFor Turbonomic to perform intelligent workload balancing, it collects raw data from its \ntargets like:\n- APM Solutions (Instana, Dynatrace, New Relic, Cisco AppDynamics), \n- Hypervisors (Microsoft Hyper-V, VMware vCenter), \n- Public Cloud (Amazon AWS, Google Cloud Platform (GCP), Microsoft Azure \nService),\n- Cloud Native Targets (OpenShift, Pivotal Kubernetes Service, Amazon Elastic, \nKubernetes Service (EKS), Azure Kubernetes Service (AKS), Cisco Container \nPlatform (CCP), Google Kubernetes Engine (GKE) \n- ...etc. \n\nTurbonomic polls its targets at 10-minute intervals to collect the latest data samples. It \nthen uses these 10-minute data points for analysis and to display data in the GUI. \nTurbonomic also uses targets to execute actions in your environment to further optimize\nthe underlying infrastructure resources. Turbonomic communicates with the target via \nthe management protocol it exposes like REST API, SMI-S, XML, or some other \nmanagement transport.<br />\nIn this lab you will establish integration between Turbonomic and two targets:\n\n1. Instana APM<br />\nTurbonomic supports discovery of applications that are managed by the Instana \nplatform. Turbonomic. includes the discovered information about these \napplications in its calculations for environment health.\n2. Kubernetes<br />\nWith Cloud Native targets, Turbonomic discovers entities related to container \nplatforms in your environment. Discovery can also stitch the container cluster \nentities together with managed applications. For example, discovery can show \nthe full application stack if your container environment includes applications \nmanaged by technology like Instana APM. \n\n**Tip:** Turbonomic must be on a network with access to the specific services you want to set up as targets. (but we have this part covered for this session)\n\n\n","type":"Mdx","contentDigest":"380c9424f7cdf15a64dca82026287444","owner":"gatsby-plugin-mdx","counter":317},"frontmatter":{"title":"Integration Lab - Introduction"},"exports":{},"rawBody":"---\ntitle: Integration Lab - Introduction\n---\nexport const Title = () => (\n  <span>\n    Integration Lab Introduction <br />\n  </span>\n)\n;\n\n# Add Targets\n\nFor Turbonomic to perform intelligent workload balancing, it collects raw data from its \ntargets like:\n- APM Solutions (Instana, Dynatrace, New Relic, Cisco AppDynamics), \n- Hypervisors (Microsoft Hyper-V, VMware vCenter), \n- Public Cloud (Amazon AWS, Google Cloud Platform (GCP), Microsoft Azure \nService),\n- Cloud Native Targets (OpenShift, Pivotal Kubernetes Service, Amazon Elastic, \nKubernetes Service (EKS), Azure Kubernetes Service (AKS), Cisco Container \nPlatform (CCP), Google Kubernetes Engine (GKE) \n- ...etc. \n\nTurbonomic polls its targets at 10-minute intervals to collect the latest data samples. It \nthen uses these 10-minute data points for analysis and to display data in the GUI. \nTurbonomic also uses targets to execute actions in your environment to further optimize\nthe underlying infrastructure resources. Turbonomic communicates with the target via \nthe management protocol it exposes like REST API, SMI-S, XML, or some other \nmanagement transport.<br />\nIn this lab you will establish integration between Turbonomic and two targets:\n\n1. Instana APM<br />\nTurbonomic supports discovery of applications that are managed by the Instana \nplatform. Turbonomic. includes the discovered information about these \napplications in its calculations for environment health.\n2. Kubernetes<br />\nWith Cloud Native targets, Turbonomic discovers entities related to container \nplatforms in your environment. Discovery can also stitch the container cluster \nentities together with managed applications. For example, discovery can show \nthe full application stack if your container environment includes applications \nmanaged by technology like Instana APM. \n\n**Tip:** Turbonomic must be on a network with access to the specific services you want to set up as targets. (but we have this part covered for this session)\n\n\n","fileAbsolutePath":"/Users/brandonwu/Documents/PTS/Gatsby/Turbonomic-2Day-Partner-Workshop/src/pages/Labs/Introduction-config.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}